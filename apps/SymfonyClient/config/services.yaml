# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            Shared\Domain\Bus\Event\EventBus: '@Shared\Infrastructure\Symfony\Bus\Event\Sync\SymfonySyncEventBus'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    SymfonyClient\:
        resource: '../src/'
    Shared\:
        resource: '../../../src/Shared/'
    TestCase\:
        resource: '../../../src/TestCase/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Shared\Infrastructure\Symfony\Bus\Query\SymfonyQueryBus:
        arguments:
            $bus: '@query.bus'

    Shared\Infrastructure\Symfony\Bus\Event\Sync\SymfonySyncEventBus:
        arguments:
            $bus: '@sync.event.bus'

    Shared\Infrastructure\Symfony\Controller\ApiExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onException }

    _instanceof:
        Shared\Domain\Bus\Command\CommandHandler:
            tags:
                - { name: messenger.message_handler, bus: command.bus }
        Shared\Domain\Bus\Query\QueryHandler:
            tags:
                - { name: messenger.message_handler, bus: query.bus }
        Shared\Domain\Bus\Event\DomainEventSubscriber:
            tags:
                - { name: messenger.message_handler, bus: sync.event.bus }
                - 'domain.event.subscriber'

    # Loads this specific normalizer to the serializer component
    property_normalizer:
        class: Symfony\Component\Serializer\Normalizer\PropertyNormalizer
        tags:
            - { name: serializer.normalizer }

#    # Define specific async event bus using Rabbit
    rabbitMQ.connection:
        class: Shared\Infrastructure\Symfony\Bus\Event\RabbitMQ\RabbitMQConnection
        arguments:
            - host: '%env(RABBITMQ_HOST)%'
              port: '%env(RABBITMQ_PORT)%'
              vhost: '%env(RABBITMQ_VHOST)%'
              login: '%env(RABBITMQ_USER)%'
              password: '%env(RABBITMQ_PASSWD)%'
              read_timeout: 2
              write_timeout: 2
              connect_timeout: 5

    event_bus.rabbitMQ:
        class: Shared\Infrastructure\Symfony\Bus\Event\RabbitMQ\RabbitMQEventBus
        arguments:
            - '@rabbitMQ.connection'
            - '%env(RABBITMQ_EXCHANGE)%'

    Shared\Infrastructure\Symfony\Bus\Event\RabbitMQ\RabbitMQConfigurator:
        arguments:
            - '@rabbitMQ.connection'

    SymfonyClient\CLI\RabbitMQConfiguratorCLI:
        arguments:
            - '@Shared\Infrastructure\Symfony\Bus\Event\RabbitMQ\RabbitMQConfigurator'
            - '%env(RABBITMQ_EXCHANGE)%'
            - !tagged domain.event.subscriber

framework:
    messenger:
        default_bus: command.bus
        buses:
            command.bus:
            query.bus:
            sync.event.bus:
                default_middleware: allow_no_handlers

